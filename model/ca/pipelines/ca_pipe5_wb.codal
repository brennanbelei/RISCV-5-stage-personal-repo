/**
 * Codasip s.r.o.
 *
 * CONFIDENTIAL
 *
 * Copyright 2022 Codasip s.r.o.
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of
 * Codasip s.r.o. and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip s.r.o. and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 *
 *  \file   ca_pipe5_wb.codal
 *  \author Codasip
 *  \date   09.02.2022
 *  \brief  Write-back - cycle accurate model
 */

// -------------------------------------------------------------------------------------------------
// Write-Back Stage
// -------------------------------------------------------------------------------------------------
#include "debug.hcodal"
#include "ca_defines.hcodal"



event wb : pipeline(pipe.WB)
{
    semantics
    {
        //this below block was made in phase 7
        s_wb_incr_pc = r_wb_pc + 4;
        switch(r_wb_rfwt_sel){
            case RFWT_ALU:
                s_wb_result = r_wb_alu;
                break;
            case RFWT_PC:
                s_wb_result = s_wb_incr_pc;
                break;
            //this last case is the only addition I made for phase 8
            case RFWT_MEM: //I believe this comes in a later phase
                s_wb_result = r_wb_memdat;
                break;
            default:
                codasip_fatal ( RFWT_ERROR , " Default case : %d\n " , r_wb_rfwt_sel );
                break;

        }

        //this if block was made in phase 6
        if ( r_wb_regwrite )
        {
            if(r_wb_rd != 0){
                //rf_xpr . wrt0 [ r_wb_rd ] = r_wb_alu ; //this line was used in phase 6
                rf_xpr . wrt0 [ r_wb_rd ] = s_wb_result ; //this line was made for phase 7
                codasip_info(INFO_RF_WRITE, "rf_xpr[%d] = 0x%x", r_wb_rd, s_wb_result); //s_wb_result used to be r_wb_alu
            }
        }
        // Set local stall.
        s_wb_stall = 0;

    };
};